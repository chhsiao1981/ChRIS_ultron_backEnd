# an ephemeral instance of ChRIS backend services for local development
#
# warning: /var/run/docker.sock is mounted into some services (notably pman)

services:
  chrisomatic:
    image: ghcr.io/fnndsc/chrisomatic:0.8.2
    profiles:
      - tools
    volumes:
      - "./chrisomatic/chrisomatic.yml:/chrisomatic.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    userns_mode: host
    depends_on:
      - chris
    networks:
      - local

  db_migrate:
    image: ghcr.io/fnndsc/cube:5.0.0
    command:
      - sh
      - -c
      - pip install -r /opt/ChRIS_ultron_backEnd/requirements/local.txt && python manage.py migrate --noinput
    volumes:
      - chris_files:/var/chris:rw
      - ./chris_backend:/opt/app-root/src
      - .:/opt/ChRIS_ultron_backEnd
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - STORAGE_ENV=fslink
    depends_on:
      chris_dev_db:
        condition: service_healthy
    networks:
      - local

  chris:
    container_name: chris
    image: ghcr.io/fnndsc/cube:5.0.0
    command:
      - sh
      - -c
      - pip install -r /opt/ChRIS_ultron_backEnd/requirements/local.txt && python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - chris_files:/var/chris:rw
      - ./chris_backend:/opt/app-root/src
      - .:/opt/ChRIS_ultron_backEnd
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - STORAGE_ENV=fslink
    depends_on:
      db_migrate:
        condition: service_completed_successfully
      queue:
        condition: service_started
    networks:
      - local
    labels:
      org.chrisproject.role: "ChRIS_ultron_backEnd"
  worker:
    image: ghcr.io/fnndsc/cube:5.0.0
    command:
      - sh
      - -c
      - pip install -r /opt/ChRIS_ultron_backEnd/requirements/local.txt && celery -A core worker -c 4 -l info -Q main1,main2
    volumes:
      - chris_files:/var/chris:rw
      - ./chris_backend:/opt/app-root/src
      - .:/opt/ChRIS_ultron_backEnd
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - STORAGE_ENV=fslink
    depends_on:
      db_migrate:
        condition: service_completed_successfully
      queue:
        condition: service_started
      pfcon:
        condition: service_started
    restart: unless-stopped
    networks:
      - local
  worker_periodic:
    image: ghcr.io/fnndsc/cube:5.0.0
    command:
      - sh
      - -c
      - pip install -r /opt/ChRIS_ultron_backEnd/requirements/local.txt && celery -A core worker -c 2 -l info -Q periodic
    volumes:
      - chris_files:/var/chris:rw
      - ./chris_backend:/opt/app-root/src
      - .:/opt/ChRIS_ultron_backEnd
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - STORAGE_ENV=fslink
    depends_on:
      db_migrate:
        condition: service_completed_successfully
      queue:
        condition: service_started
    restart: unless-stopped
    networks:
      - local
  scheduler:
    image: ghcr.io/fnndsc/cube:5.0.0
    command:
      - sh
      - -c
      - pip install -r /opt/ChRIS_ultron_backEnd/requirements/local.txt && celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - chris_files:/var/chris:rw
      - ./chris_backend:/opt/app-root/src
      - .:/opt/ChRIS_ultron_backEnd
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - STORAGE_ENV=fslink
    depends_on:
      db_migrate:
        condition: service_completed_successfully
      queue:
        condition: service_started
    restart: unless-stopped
    networks:
      - local
  chris_dev_db:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chris_dev
      - POSTGRES_USER=chris
      - POSTGRES_PASSWORD=Chris1234
    networks:
      - local
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 2s
      timeout: 4s
      retries: 3
      start_period: 60s
  queue:
    image: docker.io/library/rabbitmq:3
    restart: unless-stopped
    networks:
      - local

  pfcon:
    container_name: pfcon
    image: ghcr.io/fnndsc/pfcon:5.2.2
    environment:
      COMPUTE_SERVICE_URL: http://pman:5010/api/v1/
      SECRET_KEY: secret
      PFCON_USER: pfcon
      PFCON_PASSWORD: pfcon1234
      PFCON_INNETWORK: "true"
      STORAGE_ENV: filesystem
      STOREBASE_MOUNT: /var/local/storeBase
    ports:
      - "5005:5005"
    volumes:
      - chris_files:/var/local/storeBase
    networks:
      local:
        aliases:
          - pfcon.host
      remote:
    labels:
      org.chrisproject.role: "pfcon"
    user: "1001"

  pman:
    image: ghcr.io/fnndsc/pman:6.0.1
    container_name: pman
    environment:
      CONTAINER_ENV: docker
      CONTAINER_USER: "1001:"
      ENABLE_HOME_WORKAROUND: "yes"
      JOB_LABELS: "org.chrisproject.miniChRIS=plugininstance"
      SECRET_KEY: secret
      REMOVE_JOBS: "yes"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - pfcon
    ports:
      - "5010:5010"
    networks:
      remote:
    userns_mode: "host"
    labels:
      org.chrisproject.role: "pman"

  chris_ui:
    image: ghcr.io/fnndsc/chris_ui:staging
    command: sirv --host --single
    environment:
      REACT_APP_CHRIS_UI_URL: http://localhost:8000/api/v1/
      REACT_APP_PFDCM_URL: http://localhost:4005/
    ports:
      - "8020:3000"

  # Non-root container user workarounds

  cube-nonroot-user-volume-fix:
    image: docker.io/library/alpine:latest
    volumes:
      - chris_files:/data:rw
    user: root
    command: chmod g+rwx /data
    restart: "no"

networks:
  local:
  remote:

volumes:
  chris_files:
  db_data:
